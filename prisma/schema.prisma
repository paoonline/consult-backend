generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model login { 
  id         String   @id @default(uuid())
  email_id   String 
  login_date DateTime? @default(now())
}

model Customer {
   @@map("customer") 
  id          String    @id @default(uuid())
  email       String    @unique @db.VarChar(20) 
  password    String    @db.VarChar(100)
  job         String    @db.VarChar(50)
  address     String    @db.VarChar(255)
  phone_number String    @db.VarChar(10)
  description  String    @db.VarChar(255)
  customer_type CustomerType
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
  profile_image String? @db.VarChar(255)
  customer_detail CustomerDetail? @relation("CustomerToDetail")
  skills Skill[]
  online_status Boolean  @default(false)
  verify_email Boolean  @default(false)

   // ðŸ‘‡ back-relations
  clientTransactions     ConsultTransaction[] @relation("CustomerIsClient")
  consultantTransactions ConsultTransaction[] @relation("CustomerIsConsultant")

  price         Float @default(0.00)
}

model ConsultTransaction {
  @@map("consult_transaction")
  id               String          @id @default(uuid())
  customer     Customer  @relation("CustomerIsClient", fields: [customer_id], references: [id])
  customer_id  String    @db.VarChar(100)
  consult      Customer  @relation("CustomerIsConsultant", fields: [consult_id], references: [id])
  consult_id   String    @db.VarChar(100)

  time_list  TimeLimitType
  end_date             DateTime
  start_date           DateTime
}

model CustomerDetail {
  @@map("customer_detail") 
  id            String  @id @default(uuid())
  rate          Int? @default(0)
  customer     Customer @relation(fields: [customer_id], references: [id], name: "CustomerToDetail")
  customer_id String @unique
  bookings    Booking[]
}

model Skill {
  @@map("skill") 
  id               String          @id @default(uuid())
  name             String         @unique @db.VarChar(100)
  customers   Customer[]
}

model Booking {
  @@map("booking")
  id               String          @id @default(uuid())
  time             DateTime
  customer_detail   CustomerDetail @relation(fields: [customer_detail_id], references: [id])
  customer_detail_id String
}

enum CustomerType {
  CONSULT
  CUSTOMER
}

enum TimeLimitType {
  ONE_HR
  TWO_HR
}


